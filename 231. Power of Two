/*
https://leetcode.com/problems/power-of-two/
You are here! 2 ms
Your runtime beats 19.36% of javasubmissions.
https://leetcode.com/submissions/detail/56718868/
*/

public class Solution {
    public boolean isPowerOfTwo(int n) {
         return (n > 0) && ((n & (n - 1)) == 0);  //if n 是pow 2 則 n & (n - 1)) == 0
    }
}


===================
=====================

/*
https://leetcode.com/problems/power-of-two/
You are here! 2 ms
Your runtime beats 19.36% of javasubmissions.
https://leetcode.com/submissions/detail/56718462/
*/

public class Solution {
    public boolean isPowerOfTwo(int n) {
        if(n==1)            //特殊case判斷
          return true;
        if(n==0)
          return false;  
        
        while(n%2==0)  //除掉所有的2
        {
            n/=2;
            if(n==1)
              return true;
        }
        return false;
        
    }
}


====================
=================
/*
https://leetcode.com/problems/power-of-two/
ts 19.36% of javasubmissions.2 ms
https://leetcode.com/submissions/detail/56718572/
*/

public class Solution {
    public boolean isPowerOfTwo(int n) {
         while (n > 0 && n % 2 == 0) n /= 2;  //除掉n所有的 若n是pow 2  則n==1
        return n == 1;
    }
}
