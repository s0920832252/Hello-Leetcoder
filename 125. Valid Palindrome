https://leetcode.com/problems/valid-palindrome/#/description
Runtime: 5 ms
You are here! 
Your runtime beats 97.39% of java submissions.
https://leetcode.com/submissions/detail/97273153/

//這題的回文,只限制在判斷 大小寫數字,因此需要一個方式去判斷字元是否為大小寫數字.
//若非大小寫數字則忽略
//解題策略大概是 使用兩個point 同時去指, 看看所指的這兩個字是否依樣
//若不一樣,則此字串非回文
//若依樣,則繼續筆下一個字
//需要特別注意的是:  題目的大小寫視為相同字元.
public class Solution {
    public boolean isPalindrome(String s) {
        char strCharArray[]=s.toCharArray();
        for(int left=0,right=strCharArray.length-1;left<right;)
        {
            int checkLeft=checkAlphanumeric(strCharArray[left]);
            int checkRight=checkAlphanumeric(strCharArray[right]);
            if(checkLeft==0)
                left++;
            else if(checkRight==0)
                right--;
            else
            {
                if(checkLeft==1)
                    strCharArray[left]+=32;// or Character.toLowerCase(strCharArray[left])
                if(checkRight==1)
                    strCharArray[right]+=32;// or Character.toLowerCase(strCharArray[right])
                if(strCharArray[left]!=strCharArray[right])  //使用小寫字元比較.
                    return false;
                left++;
                right--;
            }
        }
        
        return true;
    }
    
    public int checkAlphanumeric (char ch)
    {
        if('A'<= ch && 'Z'>= ch)
            return 1;
        if('a'<= ch && 'z'>= ch)
            return 2;
        if('0'<= ch && '9'>= ch)
            return 3;
            
        return 0;
    }
}


=================
=================

class Solution {
    public boolean isPalindrome(String s) {
        char chrArr[]=s.toCharArray();
        boolean ans=true;
        for(int left=0,right=chrArr.length-1;ans &&left<right;)
        {  
            while(!isChar(chrArr[left]) && left<right )
                left++;
            while(!isChar(chrArr[right]) && left<right)
                right--;
            
            ans=isSameChar(chrArr[left],chrArr[right]);            
            left++;
            right--;
        }
        return ans;
    }
    
    public boolean isSameChar(char c,char c1)
    {        
        return Character.toLowerCase(c)==Character.toLowerCase(c1);            
    }
    
    public boolean isChar(char c)
    {
        return (c>='a' && c<='z')||(c>='A' && c<='Z')||(c>='0' && c<='9');               
    }
}
