https://leetcode.com/problems/construct-the-rectangle/
You are here! 
Your runtime beats 100.00% of java submissions.
Runtime: 6 ms
https://leetcode.com/submissions/detail/90287701/




public class Solution {
    public int[] constructRectangle(int area) {
        int ans[]=new int[2];
        int dif=area;
        int cell=(int)Math.sqrt(area);
        int temp=0;
        int temp2=0;
        
        //其實這段不寫也可以,只是 area=1的測資蠻多的,寫了會快3ms XD:
        if (area==1)
        {
            ans[0]=1;
            ans[1]=1;
            return ans;
        }
        
        
        //把所有的因素配對 展開,看一下哪一個配對 dif最小, 就存起來,輸出.
        //這題蠻數學的,  如果沒有因素拆解, 其另一半配對的值小於 sqrt(area). 的 觀念的話,會慢很多.
        //cell -> 我一時間想不到天花板的英文怎麼拚= =
        for(int i=cell;i>=1;i--)
        {
            if ((area%i)==0)
            {
                temp=area/i;
                temp2=i;
                if( (temp-temp2)<dif )
                {
                    ans[0]=temp;
                    ans[1]=temp2;
                    dif=temp-temp2;
                }              
            }
        }
        return ans;
        
    }
}

======================================================================
=======================================================================
https://leetcode.com/submissions/detail/131927505/
Runtime: 5 ms
You are here! 
Your runtime beats 47.70 % of java submissions

class Solution {
    public int[] constructRectangle(int area) {
        int cells=(int)Math.sqrt(area);
        while(area%cells!=0)
            cells--;
        return new int[]{area/cells,cells};
    }
}


======================================================================
=======================================================================
You are here! 
Your runtime beats 47.70 % of java submissions
Runtime: 5 ms
https://leetcode.com/submissions/detail/131926647/

class Solution {
    public int[] constructRectangle(int area) {
        int ans[]=new int[2];
        ans[0]=Integer.MAX_VALUE;ans[1]=0;
        for(int floor=1;floor*floor<=area;floor++)
            if(area%floor==0)
            {
                int W=floor;
                int L=area/floor;
                if( (L-W)<ans[0]-ans[1] )
                {
                    ans[0]=L;
                    ans[1]=W;
                }                    
            }
        return ans;       
    }
}

