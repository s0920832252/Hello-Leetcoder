https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/
Runtime: 12 ms
You are here! 
Your runtime beats 87.62% of java submissions
https://leetcode.com/submissions/detail/90030674/


public class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> data = new ArrayList<Integer>();
        int max=nums.length;
        
        
        //使用一個array去紀錄這個數字到底用過了沒有, 若是用過了,則標示為1,反之,因為陣列初始化為0,
        //所以之後走訪這個array,其值若是0,則代表此數字未用過.
        int Position[]=new int[max+1];
        for(int i=0;i<nums.length;i++)
        {
            Position[nums[i]]=1;
        }
        
        for(int i=1;i<Position.length;i++)
        {
            if (Position[i]==0)
                data.add(i);
        }
        
        return data;
    }
}

======================

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> list=new LinkedList<Integer>();
        boolean dict[]=new boolean[nums.length+1];
        
        for(int n:nums)
            if(!dict[n])
                dict[n]=true;
        for(int i=1;i<=nums.length;i++)
            if(!dict[i])
                list.add(i);    
        
        return list;
    } 
}

================================
https://leetcode.com/submissions/detail/130103276/
Runtime: 15 ms
You are here! 
Your runtime beats 74.09 % of java submissions.

//符合題目敘述的正解. 不使用額外空間.
//依據1 ≤ a[i] ≤ n (n = size of array), 這個條件做排序.
//排序後,去檢查位置上是否為正確的值  eg. nums[i]上的值是否為 (位置值i+1)

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> list=new LinkedList<Integer>();
        
        for(int i=0;i<nums.length;i++)
            while(nums[nums[i]-1]!=nums[i])
                mySwap(nums,nums[i]-1,i);  
        for(int i=0;i<nums.length;i++)
            if(i+1!=nums[i])
                list.add(i+1);
        return list;
    }
    
    public void mySwap(int nums[],int left,int right)
    {
        int temp=nums[left];
        nums[left]=nums[right];
        nums[right]=temp;
    }
}

