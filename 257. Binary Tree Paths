https://leetcode.com/problems/binary-tree-paths/#/description
Runtime: 16 ms
You are here! 
Your runtime beats 90.20% of java submissions.
https://leetcode.com/submissions/detail/97069037/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 //概念是DFS走訪一次,並記錄目前走過的路在path, 直到發現走道left,則把path存進list
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list =new LinkedList<String>();
        findTreePath(root,"",list);  //把List傳進去使用 竟然快10ms ....真是令我訝異XDD
        return list;
    }
    
    public void findTreePath(TreeNode root,String path,List list)
    {
        if(root==null)
            return;        
        if(root.left!=null)
            findTreePath(root.left,path+Integer.toString(root.val)+"->",list);
        if(root.right!=null)
            findTreePath(root.right,path+Integer.toString(root.val)+"->",list);
        if(root.left==null && root.right == null)
            list.add(path+root.val);
    }
}
